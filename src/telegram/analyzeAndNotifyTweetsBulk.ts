import {Tweet} from "agent-twitter-client";
import {analyzeTweetText, CryptoTweetAnalysis, explainTweet} from "../ai/analyzeTweet";
import {bot} from "../main";

const CHAT_ID = -1002394284052;
const CA_THREAD = 114
const TWEET_THREAD = 119
const CRYPTO_TWEET_THREAD = 449

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–≤–∏—Ç–∞.
 */
export async function analyzeAndNotifyTweetsBulk(username: string, tweets: Tweet[]) {
    if (tweets.length === 0) return;

    for (const tweet of tweets) {
        let analysis: CryptoTweetAnalysis | null;
        let explain: string | null;

        if (tweet.text) {
            analysis = await analyzeTweetText(tweet.text);
            explain = await explainTweet(tweet.text);
            console.log(analysis);
        } else {
            analysis = null;
            explain = null;
        }

        // –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–º —Ç–≤–∏—Ç
        // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–µ tweet.permanentUrl, –µ—Å–ª–∏ Scraper –µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç,
        // –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å –≤—Ä—É—á–Ω—É—é: https://twitter.com/<username>/status/<id>
        const tweetLink = tweet.permanentUrl
            ? tweet.permanentUrl
            : `https://twitter.com/${tweet.username}/status/${tweet.id}`;

        if (analysis && (analysis.contractAddress || analysis.contractAddress !== "")) {
            const message = `–ù–æ–≤—ã–π —Ç–≤–∏—Ç –æ –∫—Ä–∏–ø—Ç–µ –æ—Ç ${tweet.username}:
${tweet.text}

<b>Contract Address:</b> <code>${analysis.contractAddress}</code>

<b>Explain: ${explain || ""}</b>
<b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–∏—Ç:</b> <a href="${tweetLink}">${tweetLink}</a>`

            await bot.api.sendMessage(CHAT_ID, message, {
                message_thread_id: CA_THREAD,
                parse_mode: "HTML"
            });
        } else if (analysis?.isAboutCrypto || analysis?.isAboutTokenLaunch) {
            // –î–∞—Ç–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ (tweet.timeParsed –º–æ–∂–µ—Ç –±—ã—Ç—å Date, –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –Ω–µ undefined)
            let dateString = "";
            if (tweet.timeParsed) {
                // –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å dayjs –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä,
                // –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ toLocaleString():
                dateString = `\nüïí ${tweet.timeParsed.toLocaleString()}`;
            }

            // –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            const message =
                `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="https://twitter.com/${tweet.username}">${tweet.name || tweet.username}</a>
<b>–¢–µ–∫—Å—Ç:</b> ${tweet.text || ""}
${dateString}

<b>Explain: ${explain || ""}</b>
<b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–∏—Ç:</b> <a href="${tweetLink}">${tweetLink}</a>`;

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
            await bot.api.sendMessage(CHAT_ID, message, {
                message_thread_id: CRYPTO_TWEET_THREAD,
                parse_mode: "HTML"
            });
        } else {
            // –î–∞—Ç–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ (tweet.timeParsed –º–æ–∂–µ—Ç –±—ã—Ç—å Date, –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –Ω–µ undefined)
            let dateString = "";
            if (tweet.timeParsed) {
                // –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å dayjs –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä,
                // –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ toLocaleString():
                dateString = `\nüïí ${tweet.timeParsed.toLocaleString()}`;
            }

            // –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            const message =
                `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="https://twitter.com/${tweet.username}">${tweet.name || tweet.username}</a>
<b>–¢–µ–∫—Å—Ç:</b> ${tweet.text || ""}
${dateString}

<b>Explain: ${explain || ""}</b>
<b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–∏—Ç:</b> <a href="${tweetLink}">${tweetLink}</a>`;

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
            await bot.api.sendMessage(CHAT_ID, message, {
                message_thread_id: TWEET_THREAD,
                parse_mode: "HTML"
            });
        }

        console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${tweets.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ç–≤–∏—Ç–∞—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${username}".`);
    }
}